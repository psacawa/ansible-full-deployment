---
- hosts: name_full_www
  become: true
  vars_files: 
    - ./vars.yml
  environment: 
    DJANGO_ENV: production
  pre_tasks:
    - name: update cache
      apt: update_cache=yes
  roles:
    - role: geerlingguy.firewall
    - role: geerlingguy.nginx
    - role: geerlingguy.postgresql
    - role: psacawa.dotpliki
      become: false
      tag: dotpliki
  tasks:
    - name: install packages from apt
      package: 
        name: "{{ apt_packages }}"
        state: present
    - name: create application folder
      file: 
        path: "{{ backend_path }}"
        state: directory
    - name: clone application repository
      git: 
        repo: "{{ git_repsitory_url }}"
        dest: "{{ backend_path }}"
      register: git_result
      tags: frontend, backend
    - name: install python deps to virtualenv
      pip:
        chdir: "{{ backend_path }}"
        requirements: "{{ backend_path }}/lekt/requirements.pip"
        # virtualenv: "{{ backend_path }}"
        # virtualenv_python: "{{ python_version }}"
      tags: pip, backend
    - name: migrate database
      django_manage:
        app_path: "{{ backend_path }}/lekt"
        command: migrate
      tags: backend
    - name: copy uwsgi config
      template:
        src: templates/uwsgi.ini.j2
        dest: "{{ uwsgi_folder }}/apps-available/uwsgi.ini"
        mode: 0644
      tags: backend
      notify: restart uwsgi
    - name: create symlink to uwsgi config
      file:
        src: "{{ uwsgi_folder }}/apps-available/uwsgi.ini"
        dest: "{{ uwsgi_folder }}/apps-enabled/uwsgi.ini"
        state: link
      tags: backend
      notify: restart uwsgi
    - name: Install node
      # shell: "wget -qO- {{ nvm_install_url }} | bash"
      shell: |
        curl -sL {{ node_package_url }} | sudo -E bash -
        sudo apt install -y nodejs
      # creates: /usr/bin/node
      tags: frontend
    - name: Install frontend dependencies
      npm: 
        path: "{{ frontend_path }}"
        production: true
      tags: frontend
    - name: build frontend
      command:
        cmd: npm run build 
        chdir: "{{ frontend_path }}"
        # creates: "{{ frontend_path }}/build/index.html"
      when: git_result.changed
      tags: frontend
    - name: Ensure nginx root exists
      file:
        path: "{{ static_root }}"
        state: directory
      tags: frontend
      notify: restart nginx
    - name: copy static files to nginx root
      shell: "cp -r {{ frontend_path }}/build/* {{ static_root }}"
      tags: frontend
      notify: restart nginx
    - name: install let's encrypt certificate
      command: | 
        certbot -n --nginx --domain lektprojekt.com \
        --keep-until-expiring --redirect
      tags: certbot


  handlers:
    - name: restart uwsgi
      service: 
        name: uwsgi
        state: restarted
